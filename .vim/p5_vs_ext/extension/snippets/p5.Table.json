{
	"addColumn": {
		"body": [
			"addColumn(${1:[title]})"
		],
		"description": "Use addColumn() to add a new column to a Table object. Typically, you will want to specify a title, so the column may be easily referenced later by name. (If no title is specified, the new column's title will be null.)",
		"prefix": "addColumn"
	},
	"addRow": {
		"body": [
			"addRow(${1:[row]})"
		],
		"description": "Use addRow() to add a new row of data to a p5.Table object. By default, an empty row is created. Typically, you would store a reference to the new row in a TableRow object (see newRow in the example above), and then set individual values using set(). If a p5.TableRow object is included as a parameter, then that row is duplicated and added to the table.",
		"prefix": "addRow"
	},
	"clearRows": {
		"body": [
			"clearRows()"
		],
		"description": "Removes all rows from a Table. While all rows are removed, columns and column titles are maintained.",
		"prefix": "clearRows"
	},
	"columns": {
		"body": [
			"columns"
		],
		"description": "",
		"prefix": "columns"
	},
	"findRow": {
		"body": [
			"findRow(${1:value}, ${2:column})"
		],
		"description": "Finds the first row in the Table that contains the value provided, and returns a reference to that row. Even if multiple rows are possible matches, only the first matching row is returned. The column to search may be specified by either its ID or title.",
		"prefix": "findRow"
	},
	"findRows": {
		"body": [
			"findRows(${1:value}, ${2:column})"
		],
		"description": "Finds the rows in the Table that contain the value provided, and returns references to those rows. Returns an Array, so for must be used to iterate through all the rows, as shown in the example above. The column to search may be specified by either its ID or title.",
		"prefix": "findRows"
	},
	"get": {
		"body": [
			"get(${1:row}, ${2:column})"
		],
		"description": "Retrieves a value from the Table's specified row and column. The row is specified by its ID, while the column may be specified by either its ID or title.",
		"prefix": "get"
	},
	"getArray": {
		"body": [
			"getArray()"
		],
		"description": "Retrieves all table data and returns it as a multidimensional array.",
		"prefix": "getArray"
	},
	"getColumn": {
		"body": [
			"getColumn(${1:column})"
		],
		"description": "Retrieves all values in the specified column, and returns them as an array. The column may be specified by either its ID or title.",
		"prefix": "getColumn"
	},
	"getNum": {
		"body": [
			"getNum(${1:row}, ${2:column})"
		],
		"description": "Retrieves a Float value from the Table's specified row and column. The row is specified by its ID, while the column may be specified by either its ID or title.",
		"prefix": "getNum"
	},
	"getObject": {
		"body": [
			"getObject(${1:headerColumn})"
		],
		"description": "Retrieves all table data and returns as an object. If a column name is passed in, each row object will be stored with that attribute as its title.",
		"prefix": "getObject"
	},
	"getRow": {
		"body": [
			"getRow(${1:rowID})"
		],
		"description": "Returns a reference to the specified p5.TableRow. The reference can then be used to get and set values of the selected row.",
		"prefix": "getRow"
	},
	"getRowCount": {
		"body": [
			"getRowCount()"
		],
		"description": "Returns the total number of rows in a Table.",
		"prefix": "getRowCount"
	},
	"getRows": {
		"body": [
			"getRows()"
		],
		"description": "Gets all rows from the table. Returns an array of p5.TableRows.",
		"prefix": "getRows"
	},
	"getString": {
		"body": [
			"getString(${1:row}, ${2:column})"
		],
		"description": "Retrieves a String value from the Table's specified row and column. The row is specified by its ID, while the column may be specified by either its ID or title.",
		"prefix": "getString"
	},
	"matchRow": {
		"body": [
			"matchRow(${1:regexp}, ${2:column})"
		],
		"description": "Finds the first row in the Table that matches the regular expression provided, and returns a reference to that row. Even if multiple rows are possible matches, only the first matching row is returned. The column to search may be specified by either its ID or title.",
		"prefix": "matchRow"
	},
	"matchRows": {
		"body": [
			"matchRows(${1:regexp}, ${2:[column]})"
		],
		"description": "Finds the rows in the Table that match the regular expression provided, and returns references to those rows. Returns an array, so for must be used to iterate through all the rows, as shown in the example. The column to search may be specified by either its ID or title.",
		"prefix": "matchRows"
	},
	"removeColumn": {
		"body": [
			"removeColumn(${1:column})"
		],
		"description": "Use removeColumn() to remove an existing column from a Table object. The column to be removed may be identified by either its title (a String) or its index value (an int). removeColumn(0) would remove the first column, removeColumn(1) would remove the second column, and so on.",
		"prefix": "removeColumn"
	},
	"removeRow": {
		"body": [
			"removeRow(${1:id})"
		],
		"description": "Removes a row from the table object.",
		"prefix": "removeRow"
	},
	"removeTokens": {
		"body": [
			"removeTokens(${1:chars}, ${2:[column]})"
		],
		"description": "Removes any of the specified characters (or \"tokens\").  If no column is specified, then the values in all columns and rows are processed. A specific column may be referenced by either its ID or title.",
		"prefix": "removeTokens"
	},
	"rows": {
		"body": [
			"rows"
		],
		"description": "",
		"prefix": "rows"
	},
	"set": {
		"body": [
			"set(${1:column}, ${2:value})"
		],
		"description": "Stores a value in the Table's specified row and column. The row is specified by its ID, while the column may be specified by either its ID or title.",
		"prefix": "set"
	},
	"setNum": {
		"body": [
			"setNum(${1:row}, ${2:column}, ${3:value})"
		],
		"description": "Stores a Float value in the Table's specified row and column. The row is specified by its ID, while the column may be specified by either its ID or title.",
		"prefix": "setNum"
	},
	"setString": {
		"body": [
			"setString(${1:row}, ${2:column}, ${3:value})"
		],
		"description": "Stores a String value in the Table's specified row and column. The row is specified by its ID, while the column may be specified by either its ID or title.",
		"prefix": "setString"
	},
	"trim": {
		"body": [
			"trim(${1:column})"
		],
		"description": "Trims leading and trailing whitespace, such as spaces and tabs, from String table values. If no column is specified, then the values in all columns and rows are trimmed. A specific column may be referenced by either its ID or title.",
		"prefix": "trim"
	}
}