{
	"addChild": {
		"body": [
			"addChild(${1:a})"
		],
		"description": "Appends a new child to the element. The child can be specified with either a String, which will be used as the new tag's name, or as a reference to an existing p5.XML object. A reference to the newly created child is returned as an p5.XML object.",
		"prefix": "addChild"
	},
	"getAttributeCount": {
		"body": [
			"getAttributeCount()"
		],
		"description": "Counts the specified element's number of attributes, returned as an Number.",
		"prefix": "getAttributeCount"
	},
	"getChild": {
		"body": [
			"getChild(${1:name})"
		],
		"description": "Returns the first of the element's children that matches the name parameter or the child of the given index.It returns undefined if no matching child is found.",
		"prefix": "getChild"
	},
	"getChildren": {
		"body": [
			"getChildren(${1:[name]})"
		],
		"description": "Returns all of the element's children as an array of p5.XML objects. When the name parameter is specified, then it will return all children that match that name.",
		"prefix": "getChildren"
	},
	"getContent": {
		"body": [
			"getContent(${1:[defaultValue]})"
		],
		"description": "Returns the content of an element. If there is no such content, defaultValue is returned if specified, otherwise null is returned.",
		"prefix": "getContent"
	},
	"getName": {
		"body": [
			"getName()"
		],
		"description": "Gets the element's full name, which is returned as a String.",
		"prefix": "getName"
	},
	"getNumber": {
		"body": [
			"getNumber(${1:name}, ${2:[defaultValue]})"
		],
		"description": "Returns an attribute value of the element as an Number. If the defaultValue parameter is specified and the attribute doesn't exist, then defaultValue is returned. If no defaultValue is specified and the attribute doesn't exist, the value 0 is returned.",
		"prefix": "getNumber"
	},
	"getParent": {
		"body": [
			"getParent()"
		],
		"description": "Gets a copy of the element's parent. Returns the parent as another p5.XML object.",
		"prefix": "getParent"
	},
	"getString": {
		"body": [
			"getString(${1:name}, ${2:[defaultValue]})"
		],
		"description": "Returns an attribute value of the element as an String. If the defaultValue parameter is specified and the attribute doesn't exist, then defaultValue is returned. If no defaultValue is specified and the attribute doesn't exist, null is returned.",
		"prefix": "getString"
	},
	"hasAttribute": {
		"body": [
			"hasAttribute(${1:the})"
		],
		"description": "Checks whether or not an element has the specified attribute.",
		"prefix": "hasAttribute"
	},
	"hasChildren": {
		"body": [
			"hasChildren()"
		],
		"description": "Checks whether or not the element has any children, and returns the result as a boolean.",
		"prefix": "hasChildren"
	},
	"listAttributes": {
		"body": [
			"listAttributes()"
		],
		"description": "Gets all of the specified element's attributes, and returns them as an array of Strings.",
		"prefix": "listAttributes"
	},
	"listChildren": {
		"body": [
			"listChildren()"
		],
		"description": "Get the names of all of the element's children, and returns the names as an array of Strings. This is the same as looping through and calling getName() on each child element individually.",
		"prefix": "listChildren"
	},
	"removeChild": {
		"body": [
			"removeChild(${1:name})"
		],
		"description": "Removes the element specified by name or index.",
		"prefix": "removeChild"
	},
	"setAttribute": {
		"body": [
			"setAttribute(${1:name}, ${2:value})"
		],
		"description": "Sets the content of an element's attribute. The first parameter specifies the attribute name, while the second specifies the new content.",
		"prefix": "setAttribute"
	},
	"setContent": {
		"body": [
			"setContent(${1:text})"
		],
		"description": "Sets the element's content.",
		"prefix": "setContent"
	},
	"setName": {
		"body": [
			"setName(${1:the})"
		],
		"description": "Sets the element's name, which is specified as a String.",
		"prefix": "setName"
	}
}