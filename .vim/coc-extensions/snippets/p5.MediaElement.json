{
	"addCue": {
		"body": [
			"addCue(${1:time}, ${2:callback}, ${3:[value]})"
		],
		"description": "Schedule events to trigger every time a MediaElement (audio/video) reaches a playback cue point. Accepts a callback function, a time (in seconds) at which to trigger the callback, and an optional parameter for the callback. Time will be passed as the first parameter to the callback function, and param will be the second parameter.",
		"prefix": "addCue"
	},
	"autoplay": {
		"body": [
			"autoplay(${1:autoplay})"
		],
		"description": "Set HTML5 media element to autoplay or not.",
		"prefix": "autoplay"
	},
	"clearCues": {
		"body": [
			"clearCues()"
		],
		"description": "Remove all of the callbacks that had originally been scheduled via the addCue method.",
		"prefix": "clearCues"
	},
	"connect": {
		"body": [
			"connect(${1:audioNode})"
		],
		"description": "Send the audio output of this element to a specified audioNode or p5.sound object. If no element is provided, connects to p5's master output. That connection is established when this method is first called. All connections are removed by the .disconnect() method. This method is meant to be used with the p5.sound.js addon library.",
		"prefix": "connect"
	},
	"disconnect": {
		"body": [
			"disconnect()"
		],
		"description": "Disconnect all Web Audio routing, including to master output. This is useful if you want to re-route the output through audio effects, for example.",
		"prefix": "disconnect"
	},
	"duration": {
		"body": [
			"duration()"
		],
		"description": "Returns the duration of the HTML5 media element.",
		"prefix": "duration"
	},
	"hideControls": {
		"body": [
			"hideControls()"
		],
		"description": "Hide the default mediaElement controls.",
		"prefix": "hideControls"
	},
	"loop": {
		"body": [
			"loop()"
		],
		"description": "Set 'loop' to true for an HTML5 media element, and starts playing.",
		"prefix": "loop"
	},
	"noLoop": {
		"body": [
			"noLoop()"
		],
		"description": "Set 'loop' to false for an HTML5 media element. Element will stop when it reaches the end.",
		"prefix": "noLoop"
	},
	"onended": {
		"body": [
			"onended(${1:callback})"
		],
		"description": "Schedule an event to be called when the audio or video element reaches the end. If the element is looping, this will not be called. The element is passed in as the argument to the onended callback.",
		"prefix": "onended"
	},
	"pause": {
		"body": [
			"pause()"
		],
		"description": "Pauses an HTML5 media element.",
		"prefix": "pause"
	},
	"play": {
		"body": [
			"play()"
		],
		"description": "Play an HTML5 media element.",
		"prefix": "play"
	},
	"removeCue": {
		"body": [
			"removeCue(${1:id})"
		],
		"description": "Remove a callback based on its ID. The ID is returned by the addCue method.",
		"prefix": "removeCue"
	},
	"showControls": {
		"body": [
			"showControls()"
		],
		"description": "Show the default MediaElement controls, as determined by the web browser.",
		"prefix": "showControls"
	},
	"speed": {
		"body": [
			"speed(${1:[speed]})"
		],
		"description": "If no arguments are given, returns the current playback speed of the element. The speed parameter sets the speed where 2.0 will play the element twice as fast, 0.5 will play at half the speed, and -1 will play the element in normal speed in reverse.(Note that not all browsers support backward playback and even if they do, playback might not be smooth.)",
		"prefix": "speed"
	},
	"src": {
		"body": [
			"src"
		],
		"description": "Path to the media element source.",
		"prefix": "src"
	},
	"stop": {
		"body": [
			"stop()"
		],
		"description": "Stops an HTML5 media element (sets current time to zero).",
		"prefix": "stop"
	},
	"time": {
		"body": [
			"time(${1:[time]})"
		],
		"description": "If no arguments are given, returns the current time of the element. If an argument is given the current time of the element is set to it.",
		"prefix": "time"
	},
	"volume": {
		"body": [
			"volume(${1:[val]})"
		],
		"description": "Sets volume for this HTML5 media element. If no argument is given, returns the current volume.",
		"prefix": "volume"
	}
}